id: org.winehq.Wine
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: '21.08'
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --device=all
  - --socket=pulseaudio
  - --share=network
  - --allow=multiarch
  - --allow=devel
  - --system-talk-name=org.freedesktop.UDisks2
  - --system-talk-name=org.freedesktop.NetworkManager
  - --filesystem=xdg-desktop
  - --filesystem=xdg-documents
  - --filesystem=xdg-pictures
  - --filesystem=xdg-music
  - --filesystem=xdg-videos
  - --filesystem=xdg-download
  - --env=WINEDLLPATH=/app/dlls/lib32:/app/dlls/lib
  - --env=WINEPREFIX=/var/data/wine
  - --env=GST_PLUGIN_SYSTEM_PATH=/app/lib32/gstreamer-1.0:/app/lib/gstreamer-1.0:/usr/lib/i386-linux-gnu/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
command: wine
rename-desktop-file: wine.desktop
rename-icon: wine

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: '21.08'

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: '21.08'
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 21.08;1.4
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver

  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: '21.08'
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    download-if: active-gl-driver
    enable-if: active-gl-driver

  org.freedesktop.Platform.ffmpeg-full:
    directory: lib/ffmpeg
    add-ld-path: .
    version: '21.08'
    autodelete: false

  org.freedesktop.Platform.ffmpeg_full.i386:
    directory: lib32/ffmpeg
    add-ld-path: .
    version: '21.08'
    autodelete: false

  org.winehq.Wine.gecko:
    directory: share/wine/gecko

  org.winehq.Wine.mono:
    directory: share/wine/mono

  org.winehq.Wine.DLLs:
    directory: dlls
    subdirectories: true
    merge-dirs: lib;lib32;
    version: staging
    versions: stable;staging

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.mingw-w64

build-options:
  append-path: /usr/lib/sdk/mingw-w64/bin

x-compat-i386-opts: &compat_i386_opts
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  # Some autotools-based builds will fail if -L/app/lib32 isn't first
  ldflags: -L/app/lib32 -Wl,-z,relro,-z,now -Wl,--as-needed
  ldflags-override: true
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: ccache i686-unknown-linux-gnu-gcc
    CXX: ccache i686-unknown-linux-gnu-g++
  libdir: /app/lib32

separate-locales: false
cleanup:
  - '*.a'
  - '*.la'
  - /share/man

  - /bin/function_grep.pl
  - /bin/widl
  - /bin/winecpp
  - /bin/winedump
  - /bin/wineg++
  - /bin/winegcc
  - /bin/winemaker
  - /bin/wmc
  - /bin/wrc

  - /lib/wine/*.def
  - /lib32/wine/*.def
cleanup-commands:
  - mkdir -p ${FLATPAK_DEST}/lib{,32}/ffmpeg
modules:

  # Multilib deps

  - name: libusb
    sources: &libusb-sources
      - type: archive
        url: https://github.com//libusb/libusb/releases/download/v1.0.23/libusb-1.0.23.tar.bz2
        sha256: db11c06e958a82dac52cf3c65cb4dd2c3f339c8a988665110e0d24d19312ad8d
    modules:

      - name: eudev
        cleanup: &eudev-cleanup
          - /bin
          - /sbin
          - /lib*/udev
        post-install:
          - udevadm hwdb --update
        sources: &eudev-sources
          - type: archive
            url: https://github.com/gentoo/eudev/archive/v3.2.9.tar.gz
            sha256: 7d281276b480da3935d1acb239748c2c9db01a8043aad7e918ce57a223d8cd24

  - name: libusb-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    sources: *libusb-sources
    modules:

      - name: eudev-32bit
        build-options:
          arch:
            x86_64: *compat_i386_opts
        cleanup: *eudev-cleanup
        sources: *eudev-sources

  - name: FAudio
    buildsystem: cmake-ninja
    config-opts: &FAudio-config-opts
      - -DGSTREAMER=ON
    sources: &FAudio-sources
      - type: archive
        url: https://github.com/FNA-XNA/FAudio/archive/20.09.tar.gz
        sha256: 375d12ba57f507b95e030926fd08308029b38af883d0524583a2d5d8fe65168b

  - name: FAudio-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    buildsystem: cmake-ninja
    config-opts: *FAudio-config-opts
    sources: *FAudio-sources

  - name: vkd3d
    sources: &vkd3d-sources
      - type: archive
        url: https://dl.winehq.org/vkd3d/source/vkd3d-1.2.tar.xz
        sha256: b04b030fcbf0f2dacc933c76c74b449bffef1fc1a18d50254ef1ad3e380df96b

  - name: vkd3d-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    sources: *vkd3d-sources

  # Native arch build

  - name: wine
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
            - --with-mingw=ccache x86_64-w64-mingw32-gcc
          libdir: /app/lib
      env:
        LIBDIR: lib
    config-opts: &wine-config-opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
      - --without-oss
    make-install-args: &wine-make-install-args
      - LDCONFIG=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
      - INSTALL_PROGRAM_FLAGS=-s
    sources: &wine-sources
      - type: archive
        url: https://dl.winehq.org/wine/source/6.x/wine-6.20.tar.xz
        sha256: 4028237e9c7bfdd56d7604af19783ff812f645f29c27de742a688e4535528471
        x-checker-data:
          type: html
          url: https://dl.winehq.org/wine/source/6.x/
          url-pattern: (wine-[\d\w\.-]+.tar.xz)
          version-pattern: wine-([\d\w\.-]+).tar.xz
          is-main-source: true
      - type: archive
        archive-type: tar-gzip
        url: https://github.com/wine-staging/wine-staging/archive/v6.20/wine-staging-6.20.tar.gz
        sha256: 360fd304a0f4c12e3aa149dde0bc3ac7a2c8787740e1f228bd13158f855166ea
        dest: staging
        x-checker-data:
          type: json
          url: https://api.github.com/repos/wine-staging/wine-staging/tags
          tag-query: first | .name
          version-query: $tag | sub("^[vV]"; "")
          url-query: >-
            "https://github.com/wine-staging/wine-staging/archive/v\($version)/wine-staging-\($version).tar.gz"
      - type: shell
        commands:
          - ./staging/patches/patchinstall.sh DESTDIR="$(pwd)" --all
      - type: patch
        paths:
          - patches/wine/loader-prefer-winedllpath.patch

  # 32-bit compatibility build

  - name: wine-32bit
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --bindir=${FLATPAK_DEST}/bin32
        - --with-mingw=ccache i686-w64-mingw32-gcc
      env:
        LIBDIR: lib32
    config-opts: *wine-config-opts
    make-install-args: *wine-make-install-args
    post-install:
      - mv ${FLATPAK_DEST}/bin32/wine{,-preloader} ${FLATPAK_DEST}/bin/
    sources: *wine-sources
    cleanup:
      - /bin32

  # Tools

  - name: winetricks
    no-autogen: true
    make-args:
      - PREFIX=/app
    make-install-args:
      - PREFIX=/app
    sources:
      - type: git
        url: https://github.com/Winetricks/winetricks.git
        tag: '20210825'
        commit: fa11b11a91a984666bf83b42e09be33ec0d6b294
        x-checker-data:
          type: json
          url: https://api.github.com/repos/Winetricks/winetricks/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: $tag | sub("^[vV]"; "")
    modules:

      - name: p7zip
        no-autogen: true
        make-args:
          - all2
          - OPTFLAGS=-O2 -g
          - DEST_HOME=/app
          - DEST_BIN=/app/bin
          - DEST_SHARE=/app/lib/p7zip
          - DEST_MAN=/app/share/man
        make-install-args:
          - DEST_HOME=/app
          - DEST_BIN=/app/bin
          - DEST_SHARE=/app/lib/p7zip
          - DEST_MAN=/app/share/man
        sources:
          - type: archive
            url: https://downloads.sourceforge.net/p7zip/p7zip_16.02_src_all.tar.bz2
            sha256: 5eb20ac0e2944f6cb9c2d51dd6c4518941c185347d4089ea89087ffdd6e2341f
          - type: patch
            paths:
              - patches/p7zip/gcc10-conversion.patch
              - patches/p7zip/14-Fix-g++-warning.patch
          - type: shell
            only-arches:
              - x86_64
            commands:
              - ln -sf makefile.linux_amd64_asm makefile.machine
          - type: shell
            only-arches:
              - i386
            commands:
              - ln -sf makefile.linux_x86_asm_gcc_4.X makefile.machine
        modules:

          - name: yasm
            buildsystem: cmake-ninja
            sources:
              - type: archive
                url: https://github.com/yasm/yasm/archive/v1.3.0.tar.gz
                sha256: f708be0b7b8c59bc1dbe7134153cd2f31faeebaa8eec48676c10f972a1f13df3
            cleanup:
              - '*'

      - name: cabextract
        sources:
          - type: archive
            url: https://www.cabextract.org.uk/cabextract-1.9.1.tar.gz
            sha256: afc253673c8ef316b4d5c29cc4aa8445844bee14afffbe092ee9469405851ca7

  # Flatpak bundle

  - name: bundle-setup
    buildsystem: simple
    build-commands:
      - install -Dm644 -t ${FLATPAK_DEST}/etc ld.so.conf
      - mkdir -p ${FLATPAK_DEST}/{,lib/debug/}lib/i386-linux-gnu/GL
      - mkdir -p ${FLATPAK_DEST}/share/wine/{gecko,mono}
      - mkdir -p ${FLATPAK_DEST}/dlls
      - install -Dm644 ${FLATPAK_ID}.appdata.xml -t ${FLATPAK_DEST}/share/appdata
      - |
        icondir=${FLATPAK_DEST}/share/icons/hicolor
        install -Dm644 wine-logo.svg ${icondir}/scalable/apps/wine.svg
        for s in 64 128 256; do
          mkdir -p ${icondir}/${s}x${s}/apps
          rsvg-convert -h ${s} -a -o ${icondir}/${s}x${s}/apps/wine.png ${icondir}/scalable/apps/wine.svg
        done
    sources:
      - type: file
        path: ld.so.conf
      - type: file
        path: wine-logo.svg
      - type: file
        path: org.winehq.Wine.appdata.xml
